# -*- coding: utf-8 -*-
"""Copie de yolo tracking tutorial.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gAB_0LlNnzgZLvVswPj70NuloGsp6yBI

# Setup

Clone repo, install dependencies and check PyTorch and GPU.
"""

# Mount Google Drive (if your video file is stored in Google Drive)
from google.colab import drive
drive.mount('/content/drive')

# Path to your input MP4 file in Google Drive
input_file_path = '/content/drive/MyDrive/Samer/test 123.mp4'

# Path for the output AVI file in Google Drive
output_file_path = '/content/drive/MyDrive/Samer/output.avi'

# FFmpeg command to convert MP4 to AVI
ffmpeg_command = f'ffmpeg -i "{input_file_path}" -c:v copy -c:a copy "{output_file_path}"'

# Run the FFmpeg command in Colab
!{ffmpeg_command}

# Commented out IPython magic to ensure Python compatibility.
!pip install --upgrade pip setuptools wheel
!git clone https://github.com/mikel-brostrom/yolo_tracking.git  # clone repo
# %cd yolo_tracking
!pip install -e .

import torch
from IPython.display import Image, clear_output  # to display images

clear_output()
print(f"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})")

"""## Run inference on video

The ``cv2.imshow()`` and ``cv.imshow()`` functions from the [opencv-python](https://github.com/skvark/opencv-python) package are incompatible with Jupyter notebook; see https://github.com/jupyter/notebook/issues/3935.

Hence we chose to save it to file in this notebook. Locally you can use the ``--show-vid`` flag in order visualize the tracking in real-time
"""

!python examples/track.py --yolo-model yolov8n.pt --reid-model osnet_x0_25_msmt17.pt --source '/content/drive/MyDrive/Samer/output.avi' --save --conf 0.2

"""# Show results

https://stackoverflow.com/questions/60977179/how-to-play-avi-file-in-google-colab

https://stackoverflow.com/questions/57377185/how-play-mp4-video-in-google-colab

Compress the video file to a format supported by Google Colab (mpeg4 (native) -> h264 (libx264))
"""

from moviepy.editor import VideoFileClip

# Replace 'input.avi' and 'output.mp4' with your actual file names
input_file = '/content/yolo_tracking/yolo_tracking/runs/track/exp2/output.avi'
output_file = 'output.mp4'

# Load video clip
clip = VideoFileClip(input_file)

# Write the clip to a new file in mp4 format
clip.write_videofile(output_file, codec='libx264', audio_codec='aac')

# Close the clip
clip.close()

!ffmpeg -i '/content/drive/MyDrive/Samer/output.avi' -vf fps=30 -vcodec libx264 output.mp4

"""Get the file content into data_url"""

from IPython.display import HTML
from base64 import b64encode
mp4 = open('output.mp4','rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()

"""Display it with HTML"""

HTML("""
<video controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)

"""# Evaluate"""

!python examples/val.py --tracking-method deepocsort --benchmark MOT17-mini --imgsz 320 --conf 0.2
